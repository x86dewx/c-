#include<head.h>


int main(int argc, char *argv[])
{
    /*  if(argc != 2)
        {
        printf("usage:%s <fiflename>\n",argv[0]);
        return -1;
        }*/
    if(mkfifo("atob",0666) <0 && errno != EEXIST)
    {
        printf("mkfifo fail\n");
        return -1;
    }
    if(mkfifo("btoa",0666) <0 && errno != EEXIST)
    {
        printf("mkfifo fail\n");
        return -1;
    }
    if(mkfifo("inatoa",0666) <0 && errno != EEXIST)
    {
        printf("mkfifo fail\n");
        return -1;
    }

    printf("------mkfifo----success\n");
    while(1)
    {
        pid_t pid =fork();
        if(pid > 0)
        {
            int fd1 =open("atob",O_WRONLY);
            int fd3 =open("inatoa",O_RDONLY);
            char buf[100] ={0};
            char buf2[100] ={0};
            fgets(buf,sizeof(buf),stdin);
            write(fd1,buf,sizeof(buf));
            read(fd3,buf2,sizeof(buf2));
            if(strcmp(buf,"exit\n") == 0   || strcmp(buf2,"exit\n") == 0)
            {
                remove("atob");
                close(fd1);
                printf("----father close succcess----\n");
                break;
            }
        }
        else if(0 == pid)
        {
            int fd2 =open("btoa",O_RDONLY);
            int fd3 =open("inatoa",O_WRONLY);
            char buf[100] ={0};
            char buf2[100] ="exit\n";
            read(fd2,buf,sizeof(buf));
            if(strcmp(buf,"exit\n") == 0)
            {
                write(fd3,buf2,sizeof(buf2));
                remove("btoa");
                close(fd2);
                printf("----child close succcess----\n");
                break;
            }
            printf("%s",buf);
        }
    }        
    return 0;
}
